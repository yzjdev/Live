// Generated by view binder compiler. Do not edit!
package app.live.droid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.live.droid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import moe.codeest.enviews.ENDownloadView;
import moe.codeest.enviews.ENPlayView;

public final class VideoLayoutStandardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final ImageView backTiny;

  @NonNull
  public final ProgressBar bottomProgressbar;

  @NonNull
  public final TextView current;

  @NonNull
  public final ImageView fullscreen;

  @NonNull
  public final LinearLayout layoutBottom;

  @NonNull
  public final LinearLayout layoutTop;

  @NonNull
  public final ENDownloadView loading;

  @NonNull
  public final ImageView lockScreen;

  @NonNull
  public final SeekBar progress;

  @NonNull
  public final ImageView smallClose;

  @NonNull
  public final ENPlayView start;

  @NonNull
  public final RelativeLayout surfaceContainer;

  @NonNull
  public final RelativeLayout thumb;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView total;

  private VideoLayoutStandardBinding(@NonNull RelativeLayout rootView, @NonNull ImageView back,
      @NonNull ImageView backTiny, @NonNull ProgressBar bottomProgressbar,
      @NonNull TextView current, @NonNull ImageView fullscreen, @NonNull LinearLayout layoutBottom,
      @NonNull LinearLayout layoutTop, @NonNull ENDownloadView loading,
      @NonNull ImageView lockScreen, @NonNull SeekBar progress, @NonNull ImageView smallClose,
      @NonNull ENPlayView start, @NonNull RelativeLayout surfaceContainer,
      @NonNull RelativeLayout thumb, @NonNull TextView title, @NonNull TextView total) {
    this.rootView = rootView;
    this.back = back;
    this.backTiny = backTiny;
    this.bottomProgressbar = bottomProgressbar;
    this.current = current;
    this.fullscreen = fullscreen;
    this.layoutBottom = layoutBottom;
    this.layoutTop = layoutTop;
    this.loading = loading;
    this.lockScreen = lockScreen;
    this.progress = progress;
    this.smallClose = smallClose;
    this.start = start;
    this.surfaceContainer = surfaceContainer;
    this.thumb = thumb;
    this.title = title;
    this.total = total;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VideoLayoutStandardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VideoLayoutStandardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.video_layout_standard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VideoLayoutStandardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.back_tiny;
      ImageView backTiny = ViewBindings.findChildViewById(rootView, id);
      if (backTiny == null) {
        break missingId;
      }

      id = R.id.bottom_progressbar;
      ProgressBar bottomProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomProgressbar == null) {
        break missingId;
      }

      id = R.id.current;
      TextView current = ViewBindings.findChildViewById(rootView, id);
      if (current == null) {
        break missingId;
      }

      id = R.id.fullscreen;
      ImageView fullscreen = ViewBindings.findChildViewById(rootView, id);
      if (fullscreen == null) {
        break missingId;
      }

      id = R.id.layout_bottom;
      LinearLayout layoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layout_top;
      LinearLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.loading;
      ENDownloadView loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.lock_screen;
      ImageView lockScreen = ViewBindings.findChildViewById(rootView, id);
      if (lockScreen == null) {
        break missingId;
      }

      id = R.id.progress;
      SeekBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.small_close;
      ImageView smallClose = ViewBindings.findChildViewById(rootView, id);
      if (smallClose == null) {
        break missingId;
      }

      id = R.id.start;
      ENPlayView start = ViewBindings.findChildViewById(rootView, id);
      if (start == null) {
        break missingId;
      }

      id = R.id.surface_container;
      RelativeLayout surfaceContainer = ViewBindings.findChildViewById(rootView, id);
      if (surfaceContainer == null) {
        break missingId;
      }

      id = R.id.thumb;
      RelativeLayout thumb = ViewBindings.findChildViewById(rootView, id);
      if (thumb == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.total;
      TextView total = ViewBindings.findChildViewById(rootView, id);
      if (total == null) {
        break missingId;
      }

      return new VideoLayoutStandardBinding((RelativeLayout) rootView, back, backTiny,
          bottomProgressbar, current, fullscreen, layoutBottom, layoutTop, loading, lockScreen,
          progress, smallClose, start, surfaceContainer, thumb, title, total);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
